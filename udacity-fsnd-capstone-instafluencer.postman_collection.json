{
	"info": {
		"_postman_id": "48839714-5446-4472-b4e8-486d92ece4d5",
		"name": "udacity-fsnd-capstone-instafluencer",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Premium",
			"item": [
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b1edde6-8d64-48b4-96d5-6d323764e48e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.id).to.be.a('number');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searcher_username\": {{PREMUSER}},\n    \"insta_fluencer_id\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "POST /saved-insta-fluencers\n            it should create a new row in the savedInsta table\n            it should require the 'save:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": saved_insta.id}\n        where saved.id is the id of the newly added savedInsta entry\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "739ebdfb-2893-46c6-a3a5-985a8f3ac7c1",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"joe.doe@email.com\",\n    \"date_saved\": \"2020-11-05\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "POST /saved-insta-fluencers it should create a new row in the savedInsta table it should require the 'save:influencer' permission returns status code 200 and json {\"success\": True, \"id\": saved_insta.id} where saved.id is the id of the newly added savedInsta entry or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6f2b45b-ca39-4ddc-b80e-d3d620649e02",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.insta_fluencers).to.be.an('array');",
									"    pm.expect(jsonData.total_insta_fluencers).to.be.a('number');",
									"    pm.expect(jsonData.search_term).to.be.a('string');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"college radio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"search"
							]
						},
						"description": "POST /insta-fluencers/search\n    it searches instafluencer table by hashtag\n    it should not require any permission to use\nreturns status code 200 and json\n{\n    'success': True,\n    'fluencers': selection,\n    'total_fluencers': len(selection),\n    'search_term': search_term\n}\n"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9bfe6f5-962e-446c-8a41-a5d2e0c4bbc6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.id).to.be.a('number');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"anjee_smiles\",\n    \"full_name\": \"Anjen√©e\",\n    \"profile_pic_link\": \"https://scontent-atl3-2.cdninstagram.com/v/t51.2885-19/s150x150/45466966_323990854861643_3648830650758201344_n.jpg?_nc_ht=scontent-atl3-2.cdninstagram.com&_nc_ohc=6uwDtqxJfVwAX-7yU_R&oh=cd1bfb665b6331a0e3c193750ca7b3ec&oe=5FCAE768\",\n    \"profile_link\":\"https://www.instagram.com/anjee_smiles/\",\n    \"followers\": 3100,\n    \"posts_per_week\": 0.5,\n    \"engagement\": 19.1,\n    \"hashtags\": [\"college radio\", \"radio host\"]   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers"
							]
						},
						"description": "POST /insta-fluencers\n            it should create a new row in the instafluencer table\n            it should require the 'add:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": instafluencer.id}\n        where instafluencer.id is the id of the newly added instafluencer\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f09c22c-9d85-43f5-a4ea-7731a978ccc4",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"anjee_smiles\",\n    \"posts_per_week\": 0.5,\n    \"enagement\": 19.1,\n    \"hashtags\": [\"college radio\", \"radio host\"]   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers"
							]
						},
						"description": "POST /insta-fluencers\n            it should create a new row in the instafluencer table\n            it should require the 'add:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": instafluencer.id}\n        where instafluencer.id is the id of the newly added instafluencer\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a8e8f4d-2add-4195-8651-f2678492f1a5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"engagement\": 15   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"1"
							]
						},
						"description": "PATCH /insta-fluencers/<insta_id>\n            where <insta_id> is the existing insta_fluencer_id\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/10000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "639b0387-93e2-4c18-9975-cb18b6befbe0",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"engagement\": 15   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/10000",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"10000"
							]
						},
						"description": "PATCH /insta-fluencers/<insta_id>\n            where <insta_id> is the existing insta_fluencer_id\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers/5",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d9c917f-c46e-4b7e-87a2-003ac098ff1c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.deleted_id).to.be.a('number');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers/5",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers",
								"5"
							]
						},
						"description": "DELETE /saved-insta-fluencers/<saved_id>\n            where <saved_id> is the existing saved model id\n            it should respond with a 404 error if <saved_id> is not found\n            it should delete the corresponding row for <saved_id>\n            it should require the 'unsave:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": saved_id}\n        where saved_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers/10000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bcf52cd-a5fe-4e5f-a0e5-35949a4c7f30",
								"exec": [
									"pm.test(\"Status code is 404; Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers/10000",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers",
								"10000"
							]
						},
						"description": "DELETE /saved-insta-fluencers/<saved_id>\n            where <saved_id> is the existing saved model id\n            it should respond with a 404 error if <saved_id> is not found\n            it should delete the corresponding row for <saved_id>\n            it should require the 'unsave:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": saved_id}\n        where saved_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ddc470e-cbfb-4629-b295-db3c218f89a6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.saved_list).to.be.an('array');",
									"    pm.expect(jsonData.total_saved).to.be.an('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "GET /saved-insta-fluencers\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/8",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b860c64-7dbe-48d2-8931-1a850798b193",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.deleted_id).to.be.a('number');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/9",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"9"
							]
						},
						"description": "DELETE /insta-fluencers/<insta_id>\n            where <insta_id> is the existing instafluencer model id\n            it should respond with a 404 error if <insta_id> is not found\n            it should delete the corresponding row for <insta_id>\n            it should require the 'delete:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": insta_id}\n        where insta_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/10000",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "256703f8-a544-4c75-a4ce-a7b765e772b3",
								"exec": [
									"pm.test(\"Status code is 404; Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/10000",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"10000"
							]
						},
						"description": "DELETE /insta-fluencers/<insta_id>\n            where <insta_id> is the existing instafluencer model id\n            it should respond with a 404 error if <insta_id> is not found\n            it should delete the corresponding row for <insta_id>\n            it should require the 'delete:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": insta_id}\n        where insta_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlhkaEdaQU1va1ZPdXJWeXVkUUkyNSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtZGVtby51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTQ1OTY0MjU1Njk4MzAzOTcxNTIiLCJhdWQiOlsiaW5zdGFmbHVlbmNlciIsImh0dHBzOi8vZnNuZC1kZW1vLnVzLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE2MDg3NTU4MjMsImV4cCI6MTYwODg0MjIyMywiYXpwIjoiQ0NKa3Jjb0IwcnplNjczVFBFSVBFaHdEVXpvdDlSaGsiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwicGVybWlzc2lvbnMiOlsiYWRkOmluZmx1ZW5jZXIiLCJkZWxldGU6aW5mbHVlbmNlciIsInNhdmU6aW5mbHVlbmNlciIsInVuc2F2ZTppbmZsdWVuY2VyIiwidXBkYXRlOmluZmx1ZW5jZXIiLCJ2aWV3OnNhdmVkIl19.hiGpw_x82euzYaTXywBez4CykOW4-HM7H6qlSzatDA-3lv-RDAN35HGV2CpzaXQ_wcFnWg5TtW-46tLkAvUoNcHU1m-e5QR9R9TdT8DuAqBpjcQfdx7muEUexmPMLbotdQKlXTP7AofYfZGJ886INthT2V5wS7pu4ATEiwEHh1ld70KGc3naPNlQpP0mf0kMAa_FCSKERmK-WiP73lXXlTTc-Rchz1R8wicYkjZQnUTGUSF0_KIs0AcZxP1Z3J6nvffnlj6dJOzNrmfdtZXtLvQ4zzpUYBH3YuB29m-hqc7X_FjWcS3iIhetY5DqkpIiWsTGUNl6okvI4w9gO1eVig",
						"type": "string"
					},
					{
						"key": "password",
						"value": "{{Premium Account}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cda9f2e9-e3e0-4726-87d6-e921789455be",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "05a020fa-d6e6-424a-bae9-76d2c533ab23",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Standard",
			"item": [
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a473614-1582-48d0-83ce-eb33c97f6f2f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.id).to.be.a('number');",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"searcher_username\": {{STANDUSER}},\n    \"insta_fluencer_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "POST /saved-insta-fluencers\n            it should create a new row in the savedInsta table\n            it should require the 'save:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": saved_insta.id}\n        where saved.id is the id of the newly added savedInsta entry\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a328b029-86b8-4bb8-bf17-75d2b747fb15",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"anjee_smiles\",\n    \"full_name\": \"Anjen√©e\",\n    \"profile_pic_link\": \"https://scontent-atl3-2.cdninstagram.com/v/t51.2885-19/s150x150/45466966_323990854861643_3648830650758201344_n.jpg?_nc_ht=scontent-atl3-2.cdninstagram.com&_nc_ohc=6uwDtqxJfVwAX-7yU_R&oh=cd1bfb665b6331a0e3c193750ca7b3ec&oe=5FCAE768\",\n    \"profile_link\":\"https://www.instagram.com/anjee_smiles/\",\n    \"followers\": 3100,\n    \"posts_per_week\": 0.5,\n    \"enagement\": 19.1,\n    \"hashtags\": [\"college radio\", \"radio host\"]   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers"
							]
						},
						"description": "POST /insta-fluencers\n            it should create a new row in the instafluencer table\n            it should require the 'add:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": instafluencer.id}\n        where instafluencer.id is the id of the newly added instafluencer\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "116910be-0fe8-4689-9640-f37601fea133",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.insta_fluencers).to.be.an('array');",
									"    pm.expect(jsonData.total_insta_fluencers).to.be.a('number');",
									"    pm.expect(jsonData.search_term).to.be.a('string');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"college radio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"search"
							]
						},
						"description": "POST /insta-fluencers/search\n    it searches instafluencer table by hashtag\n    it should not require any permission to use\nreturns status code 200 and json\n{\n    'success': True,\n    'fluencers': selection,\n    'total_fluencers': len(selection),\n    'search_term': search_term\n}\n"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/4",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "853e8fb8-1546-4d55-aad7-4b9079ff21d8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"engagement\": 18   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/4",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"4"
							]
						},
						"description": "PATCH /insta-fluencers/<insta_id>\n            where <insta_id> is the existing insta_fluencer_id\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e042ab3-ba37-4f13-b164-4cdfd901df25",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.deleted_id).to.be.a('number');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers/3",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers",
								"3"
							]
						},
						"description": "DELETE /saved-insta-fluencers/<saved_id>\n            where <saved_id> is the existing saved model id\n            it should respond with a 404 error if <saved_id> is not found\n            it should delete the corresponding row for <saved_id>\n            it should require the 'unsave:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": saved_id}\n        where saved_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b7e2b50-6ad4-4b37-99ad-ec00b6574574",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.saved_list).to.be.an('array');",
									"    pm.expect(jsonData.total_saved).to.be.an('number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "GET /saved-insta-fluencers\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ebf2327-af60-415b-9930-17f69b655396",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"1"
							]
						},
						"description": "DELETE /insta-fluencers/<insta_id>\n            where <insta_id> is the existing instafluencer model id\n            it should respond with a 404 error if <insta_id> is not found\n            it should delete the corresponding row for <insta_id>\n            it should require the 'delete:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": insta_id}\n        where insta_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlhkaEdaQU1va1ZPdXJWeXVkUUkyNSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtZGVtby51cy5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTE1MTEzMDE0NDk1NjI1NDIxMDYiLCJhdWQiOlsiaW5zdGFmbHVlbmNlciIsImh0dHBzOi8vZnNuZC1kZW1vLnVzLmF1dGgwLmNvbS91c2VyaW5mbyJdLCJpYXQiOjE2MDg3NTU5NDQsImV4cCI6MTYwODg0MjM0NCwiYXpwIjoiQ0NKa3Jjb0IwcnplNjczVFBFSVBFaHdEVXpvdDlSaGsiLCJzY29wZSI6Im9wZW5pZCBwcm9maWxlIGVtYWlsIiwicGVybWlzc2lvbnMiOlsic2F2ZTppbmZsdWVuY2VyIiwidW5zYXZlOmluZmx1ZW5jZXIiLCJ1cGRhdGU6aW5mbHVlbmNlciIsInZpZXc6c2F2ZWQiXX0.O6FJHhtZPTNKSJI1MI-yb4z5Dw_6ABnR2pjBChw5B8S2EcY7mZnFl7DsPXUkQHHA5x06wokp8L-eHQGc0PMwZq0_4TUdCri8uEY8ZzPs7PFjKEqwMdZMp14P_eSxkQG6F7IyPY3Oh6GRMPT_DTv4LRmGPkjEb-x_ImETzUfoXRf1Tmn0sMJHf56C5dtO_UQ38i1tv470Rvhu5XceWMc-6cbH9DcF3fok7PN1ktq7Ghs2Yf1GuvXs7xqUM-l7uUl0Aqz4hRKu1tgHQGXbcJ2nLTO6US1Z5uqP_e2122wni5vH7-GfZMI6HiBtqAn0tNefVjdvGspTTyxzbyvCzv9CEw",
						"type": "string"
					},
					{
						"key": "password",
						"value": "{{Standard}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "13cd6344-32c4-4f60-b349-689dba752768",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a0eb0758-4fa3-4bad-8884-1b73595b8526",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Public",
			"item": [
				{
					"name": "/insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e67d189a-cf0e-4803-92e0-5923b0e417e9",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"anjee_smiles\",\n    \"full_name\": \"Anjen√©e\",\n    \"profile_pic_link\": \"https://scontent-atl3-2.cdninstagram.com/v/t51.2885-19/s150x150/45466966_323990854861643_3648830650758201344_n.jpg?_nc_ht=scontent-atl3-2.cdninstagram.com&_nc_ohc=6uwDtqxJfVwAX-7yU_R&oh=cd1bfb665b6331a0e3c193750ca7b3ec&oe=5FCAE768\",\n    \"profile_link\":\"https://www.instagram.com/anjee_smiles/\",\n    \"followers\": 3100,\n    \"posts_per_week\": 0.5,\n    \"engagement\": 19.1,\n    \"hashtags\": [\"college radio\", \"radio host\"]   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers"
							]
						},
						"description": "POST /insta-fluencers\n            it should create a new row in the instafluencer table\n            it should require the 'add:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": instafluencer.id}\n        where instafluencer.id is the id of the newly added instafluencer\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78a48b2a-f772-4260-a5ee-98254106b7c9",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"insta_fluencer_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "POST /saved-insta-fluencers\n            it should create a new row in the savedInsta table\n            it should require the 'save:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"id\": saved_insta.id}\n        where saved.id is the id of the newly added savedInsta entry\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/search",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11bc0e56-1d5f-40ac-9d00-b3131634c926",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Test Response Data Type\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData.insta_fluencers).to.be.an('array');",
									"    pm.expect(jsonData.total_insta_fluencers).to.be.a('number');",
									"    pm.expect(jsonData.search_term).to.be.a('string');",
									"    pm.expect(jsonData.success).to.be.a('boolean');",
									"    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"search_term\": \"college radio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"search"
							]
						},
						"description": "POST /insta-fluencers/search it searches instafluencer table by hashtag it should not require any permission to use returns status code 200 and json { 'success': True, 'fluencers': selection, 'total_fluencers': len(selection), 'search_term': search_term }"
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c486bb09-bb18-4944-a1e6-3f156ee2b23f",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"engagement\": 15   \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"1"
							]
						},
						"description": "PATCH /insta-fluencers/<insta_id>\n            where <insta_id> is the existing insta_fluencer_id\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				},
				{
					"name": "/insta-fluencers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c486bb09-bb18-4944-a1e6-3f156ee2b23f",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/insta-fluencers/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"insta-fluencers",
								"1"
							]
						},
						"description": "DELETE /insta-fluencers/<insta_id>\n            where <insta_id> is the existing instafluencer model id\n            it should respond with a 404 error if <insta_id> is not found\n            it should delete the corresponding row for <insta_id>\n            it should require the 'delete:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": insta_id}\n        where insta_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da736831-ac25-485f-b1e3-f458e43c99a7",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers",
								"1"
							]
						},
						"description": "DELETE /saved-insta-fluencers/<saved_id>\n            where <saved_id> is the existing saved model id\n            it should respond with a 404 error if <saved_id> is not found\n            it should delete the corresponding row for <saved_id>\n            it should require the 'unsave:influencer' permission\n        returns status code 200 and json {\"success\": True, \"delete\": saved_id}\n        where saved_id is the id of the deleted record\n            or appropriate status code indicating reason for failure"
					},
					"response": []
				},
				{
					"name": "/saved-insta-fluencers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92a03245-19c6-4ffe-bcb3-55e9cb3c3643",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/saved-insta-fluencers",
							"host": [
								"{{host}}"
							],
							"path": [
								"saved-insta-fluencers"
							]
						},
						"description": "GET /saved-insta-fluencers\n            it should respond with a 404 error if <insta_id> is not found\n            it should update the corresponding row for <insta_id>\n            it should require the 'update:influencer' permission\n        returns status code 200 and json\n        {\"success\": True, \"instafluencer\": instafluencer}\n       "
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8c085405-528c-45e8-a1a3-72024090ccfa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b2379841-ef10-4de6-b705-0ece9329db81",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "fcfc3e25-3b0e-4eff-8136-3e218b6a46bf",
			"key": "host",
			"value": "https://instafluencer.herokuapp.com/"
		},
		{
			"id": "ac09b84d-5519-4d5d-980b-592d993b0b14",
			"key": "Premium",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlhkaEdaQU1va1ZPdXJWeXVkUUkyNSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtZGVtby51cy5hdXRoMC5jb20vIiwic3Vi..."
		},
		{
			"id": "9d1a43f0-4d9c-4b1e-b9db-533fefc75fa3",
			"key": "Standard",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlhkaEdaQU1va1ZPdXJWeXVkUUkyNSJ9.eyJpc3MiOiJodHRwczovL2ZzbmQtZGVtby51cy5hdXRoMC5jb20vIiwic3Vi..."
		},
		{
			"id": "85663814-da28-4a93-b3d7-0a0dc0410ee6",
			"key": "STANDUSER",
			"value": "\"google-oauth2|111511301449562542106\""
		},
		{
			"id": "24862729-2a92-438f-b092-9037e09390ea",
			"key": "PREMUSER",
			"value": "\"google-oauth2|114596425569830397152\""
		},
		{
			"id": "90332d4f-a0e9-4a15-b830-c59489b9ed12",
			"key": "API_AUDIENCE",
			"value": "'instafluencer'"
		},
		{
			"id": "a41b5e76-e87a-4ebc-864e-bbb509498391",
			"key": "ALGORITHMS",
			"value": "['RS256']"
		},
		{
			"id": "3d846551-a58d-4bce-a3cc-921a6f3d6afd",
			"key": "AUTH0_DOMAIN",
			"value": "'fsnd-demo.us.auth0.com'"
		}
	],
	"protocolProfileBehavior": {}
}